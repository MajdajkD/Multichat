<h3 class="m-5">Dashboard</h3>

<div class="m-5 p-5 border border-2 border-light rounded-3">
  <h4 class="m-3">Added connections:</h4>
  <table class="table table-dark">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Type</th>
        <th scope="col">Listening to</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody>
      @{
        int i = 1;
        foreach (var connection in Config.Connections)
        {
          <tr>
            <th scope="row">@(i++)</th>
            <td>
              @(
                connection.Service switch
                {
                  StreamService.Twitch => "Twitch",
                  StreamService.Discord => "Discord",
                  StreamService.YouTube => "YouTube",
                  _ => ""
                })
            </td>
            <td>@(connection.Service == StreamService.Discord ? "Bot Channels" : connection.ChannelName)</td>
            <th scope="row"><button class="btn btn-primary" @onclick=@(()=>removeConnection(connection))>Remove</button></th>
          </tr>
        }
      }
    </tbody>
  </table>
</div>

@inject LocalStorageJsInterop ls
@code {
  [Parameter]
  public Config Config { get; set; }

  private async Task removeConnection(Connection connection)
  {
    Config.Connections.Remove(connection);
    var saveConfig = JsonSerializer.Serialize(Config);
    await ls.save("config", saveConfig);
    StateHasChanged();
  }
}
